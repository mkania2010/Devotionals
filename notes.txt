*---------------------------------*
		Documentation
*---------------------------------*
Dotnet API and Mongo guide
	https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-mongo-app?view=aspnetcore-5.0&tabs=visual-studio-code

Mongo Database tools documentation
	https://docs.mongodb.com/database-tools/

run dotnet project on linux
	https://www.c-sharpcorner.com/article/how-to-deploy-net-core-application-on-linux/

Install MongoDB on Ubuntu
	https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/



*---------------------------------*
		Useful Commands
*---------------------------------*
Build Project
	dotnet publish ~/Documents/Github/Devotionals/API/DevoAPI.csproj \
		--output ~/Documents/Github/Devotionals/Build/API

	cd ~/Documents/Github/Devotionals/Website && ng build --outputPath=../Build/Website --prod

Bind remote port to local
	ssh {connectionInfo} -L 8888:localhost:27017

See all network traffic on port 5001 from interface eno1
	tcpdump -nn -i eno1 'tcp and port 5001'
	tcpdump -nn -i lo 'tcp and port 5001'

Discard local changes to git repo and pull
	git fetch
	git reset --hard HEAD
	git merge '@{u}'



*---------------------------------*
			Setup
*---------------------------------*
Update certs on Ubuntu server - must be run under the same user as the system process in the step below specifies
	su {user}
	dotnet dev-certs https --clean
	dotnet dev-certs https
	update-ca-certificates

Run the API as a system service
	vim /etc/systemd/system/DevoAPI.service
	
	[Unit]
	Description=DotNet API for teh Devotionals Website
	[Service]
	WorkingDirectory=/srv/Devotionals/Build/API
	ExecStart=/usr/bin/dotnet /srv/Devotionals/Build/API/DevoAPI.dll | systemd-cat -t DevoAPI
	Restart=always
	RestartSec=10
	SyslogIdentifier=DevoAPI
	User={user}
	Environment=ASPNETCORE_ENVIRONMENT=Production
	[Install]
	WantedBy=multi-user.target

NGINX config - useful site to test config: https://nginx.viraptor.info
	server {
		listen 443 ssl http2 default_server;
		server_name www.devotionals.xyz;

		ssl_certificate /etc/ssl/localCerts/local.pem;
		ssl_certificate_key /etc/ssl/localCerts/local.key;

		access_log /var/log/nginx/default.access.log;
		error_log /var/log/nginx/default.error.log;

		location / {
			root /srv/Devotionals/Build/Website;
			index index.html;

			expires -1;
			add_header Pragma "no-cache";
			add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
			
			try_files $uri /index.html;
		}

		#location ~ \.php$ {
		#	root           html;
		#	fastcgi_pass   127.0.0.1:9000;
		#	fastcgi_index  index.php;
		#	fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
		#	include        fastcgi_params;
		#}

		location ~ /\.ht {
			deny all;
		}
	}

	server {
		server_name api.devotionals.xyz;
		listen 443 ssl http2;

		ssl_certificate /etc/ssl/localCerts/local.pem;
		ssl_certificate_key /etc/ssl/localCerts/local.key;

		error_log /var/log/nginx/api.error.log;
		access_log /var/log/nginx/api.access.log;

		location = / {
			proxy_pass https://localhost:5001/api/devotionals;
		}

		location ~ "/([0-9]{4})" {
			proxy_pass https://localhost:5001/api/devotionals/$1-1-1;
		}

		location ~ /\.ht {
			deny all;
		}
	}

	server {
		server_name devotionals.xyz;
		return 301 $scheme://www.example.com$request_uri;
	}


Crontab Entry for Scraper - runs every Thursday at 5:30 pm
	contab -e --- "contab -l" to list list entries
		30 17 * * 4 /snap/bin/powershell -ExecutionPolicy ByPass -File "/srv/Devotionals/Scraper/scraper.ps1" | systemd-cat -t DevoAPI
		*/2 * * * * /usr/bin/curl https://api.devotionals.xyz/1958